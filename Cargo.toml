[workspace]
members = [
  "crates/wm-api",
  "crates/wm-core",
  "crates/wm-adapters",
  "crates/wm-storage",
  "crates/wm-config",
]
resolver = "2"

[workspace.package]
edition = "2021"
license = "MIT"
authors = ["WolfManagerRust Devs"]

[workspace.dependencies]
anyhow = "1"
thiserror = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
time = { version = "0.3", features = ["serde"] }
uuid = { version = "1", features = ["serde", "v4"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
dashmap = "5"
log = "0.4"
futures-util = "0.3"
futures-core = "0.3"
async-trait = "0.1"
bytes = "1"
http = "1"

# Web
axum = "0.8"
tokio = { version = "1", features = ["macros", "rt-multi-thread", "signal"] }
tower = "0.5"
tower-http = { version = "0.5", features = ["trace", "cors"] }
hyper = { version = "1", features = ["http1", "http2", "client"] }
hyper-util = { version = "0.1", features = ["client", "client-legacy", "http1", "http2", "tokio"] }

# OpenAPI
utoipa = { version = "5", features = ["uuid", "time"] }
utoipa-axum = "0.2"

# Storage
sqlx = { version = "0.8", default-features = false, features = [
  "runtime-tokio",
  "macros",
  "uuid",
  "time",
  "sqlite",
  "postgres",
  "migrate",
  "any"
] }

# Adapters
reqwest = { version = "0.12.23", features = ["json", "stream", "rustls-tls", "gzip", "brotli", "deflate"] }